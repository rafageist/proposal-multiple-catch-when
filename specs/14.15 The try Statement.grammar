14.15 The try Statement (Modified)

Syntax (Proposed Change)

TryStatement[Yield, Await, Return] :
    Block[?Yield, ?Await, ?Return]
    

14.15.1 Static Semantics: Early Errors (Proposed Change)

(...)

Catch : catch ( CatchParameter ) when ( Expression ) Block

- It is a Syntax Error if BoundNames of CatchParameter contains any duplicate elements.
- It is a Syntax Error if any element of the BoundNames of CatchParameter also occurs in the LexicallyDeclaredNames of Block.
- It is a Syntax Error if any element of the BoundNames of CatchParameter also occurs in the VarDeclaredNames of Block.
- It is a Syntax Error if the Expression is not a valid Boolean expression.

14.15.2 Runtime Semantics: CatchClauseEvaluation (Proposed Change)

(...)

Catch : catch ( CatchParameter ) when ( Expression ) Block

1. Let oldEnv be the running execution context's LexicalEnvironment.
2. Let catchEnv be NewDeclarativeEnvironment(oldEnv).
3. For each element argName of the BoundNames of CatchParameter, do
   a. Perform ! catchEnv.CreateMutableBinding(argName, false).
4. Set the running execution context's LexicalEnvironment to catchEnv.
5. Let status be Completion(BindingInitialization of CatchParameter with arguments thrownValue and catchEnv).
6. If status is an abrupt completion, then
   a. Set the running execution context's LexicalEnvironment to oldEnv.
   b. Return ? status.
7. If the result of evaluating Expression is false, return undefined.
8. Let B be Completion(Evaluation of Block).
9. Set the running execution context's LexicalEnvironment to oldEnv.
10. Return ? B.

(...)

14.15.3 Runtime Semantics: Evaluation (Proposed Change)

(...)

TryStatement : try Block CatchSequence Finally

1. Let B be Completion(Evaluation of Block).
2. Let S be the List of CaseClause items in CatchSequence, in source text order.
2. If B is a throw completion, For each CatchClause A of S, do:
   a. Let C be Completion(CatchClauseEvaluation of CatchClause with argument B.[[Value]]).
   b. If C is not undefined, exit the loop and proceed to the next step.
3. If all Catch of CatchSequence result in undefined, rethrow the exception.
4. Otherwise, let C be B.
5. Let F be Completion(Evaluation of Finally).
6. If F is a normal completion, set F to C.
7. Return ? UpdateEmpty(F, undefined).